{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 5affb369814f6a5d99ad","webpack:///./src/index.js","webpack:///./src/api.js","webpack:///./src/utilities.js","webpack:///./src/request.js","webpack:///external \"https\"","webpack:///external \"querystring\""],"names":["apiRequest","bind","autoComplete","interestByRegion","interestOverTime","relatedQueries","relatedTopics","request","searchType","resultsPromise","reqObj","cb","cbFunc","obj","Error","Promise","reject","then","res","catch","err","isLessThan7Days","convertDateToString","formatTime","constructObj","formatResolution","parseResults","formatComparisonItems","getResults","date1","date2","Math","abs","d","shouldIncludeTime","month","getUTCMonth","toString","length","day","getUTCDate","year","getUTCFullYear","hour","getUTCHours","minute","getUTCMinutes","startTime","Date","endTime","temp","granularTimeResolution","time","Array","isArray","keyword","hl","category","timezone","getTimezoneOffset","possibleProperties","indexOf","property","resolution","resolutions","isResValid","some","toUpperCase","results","JSON","parse","slice","widgets","e","requestBody","items","reduce","arr","push","geo","forEach","region","index","map","path","encodeURIComponent","_id","options","method","host","qs","req","stringify","comparisonItem","tz","agent","parsedResults","resultObj","find","id","errObj","message","token","requestOptions","nextOptions","cookieVal","rereq","done","chunk","on","data","end","headers","resolve","statusCode","split","response"],"mappings":"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","file":"google-trends-api.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"https\"), require(\"querystring\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"google-trends-api\", [\"https\", \"querystring\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"google-trends-api\"] = factory(require(\"https\"), require(\"querystring\"));\n\telse\n\t\troot[\"google-trends-api\"] = factory(root[\"https\"], root[\"querystring\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 5affb369814f6a5d99ad\n **/","'use strict';\r\nimport api from './api';\r\nimport request from './request';\r\n\r\nconst apiRequest = api.bind(this, request);\r\n\r\nexport default {\r\n  autoComplete: apiRequest('Auto complete'),\r\n  interestByRegion: apiRequest('Interest by region'),\r\n  interestOverTime: apiRequest('Interest over time'),\r\n  relatedQueries: apiRequest('Related queries'),\r\n  relatedTopics: apiRequest('Related topics'),\r\n};\r\n\n\n\n/** WEBPACK FOOTER **\n ** C:/xampp/htdocs/google-trends-api/~/eslint-loader!./src/index.js\n **/","'use strict';\r\nimport { constructObj, getResults } from './utilities';\r\n\r\nexport default (request, searchType) => {\r\n  const resultsPromise = getResults(request);\r\n\r\n  return (reqObj, cb) => {\r\n    const {\r\n      cbFunc,\r\n      obj,\r\n    } = constructObj(reqObj, cb);\r\n\r\n    if (obj instanceof Error) return Promise.reject(cbFunc(obj));\r\n\r\n    return resultsPromise(searchType, obj)\r\n    .then(res => cbFunc(null, res))\r\n    .catch(err => Promise.reject(cbFunc(err)));\r\n  };\r\n};\r\n\n\n\n/** WEBPACK FOOTER **\n ** C:/xampp/htdocs/google-trends-api/~/eslint-loader!./src/api.js\n **/","'use strict';\r\nexport function isLessThan7Days(date1, date2) {\r\n  return (Math.abs(date2 - date1) / (24 * 60 * 60 * 1000)) < 7;\r\n}\r\n\r\nexport function convertDateToString(d, shouldIncludeTime) {\r\n  let month = (d.getUTCMonth() + 1).toString();\r\n\r\n  month = month.length < 2 ? '0' + month : month;\r\n  const day = d.getUTCDate().toString();\r\n  const year = d.getUTCFullYear().toString();\r\n  const hour = d.getUTCHours();\r\n  const minute = d.getUTCMinutes();\r\n\r\n  if (shouldIncludeTime) {\r\n    return `${year}-${month}-${day}T${hour}\\\\:${minute}\\\\:00`;\r\n  }\r\n\r\n  return `${year}-${month}-${day}`;\r\n}\r\n\r\nexport function formatTime(obj) {\r\n  if (obj.startTime && !(obj.startTime instanceof Date)) {\r\n    return new Error('startTime must be a Date object');\r\n  }\r\n  if (obj.endTime && !(obj.endTime instanceof Date)) {\r\n    return new Error('endTime must be a Date object');\r\n  }\r\n\r\n  if (obj.startTime && obj.endTime && obj.startTime > obj.endTime) {\r\n    const temp = obj.startTime;\r\n\r\n    obj.startTime = obj.endTime;\r\n    obj.endTime = temp;\r\n  }\r\n\r\n  if (!obj.endTime) obj.endTime = new Date();\r\n  if (!obj.startTime) obj.startTime = new Date('2004-01-01');\r\n\r\n  const shouldIncludeTime = isLessThan7Days(obj.startTime, obj.endTime);\r\n\r\n  const startTime = convertDateToString(obj.startTime,\r\n    shouldIncludeTime && obj.granularTimeResolution);\r\n  const endTime = convertDateToString(obj.endTime,\r\n    shouldIncludeTime && obj.granularTimeResolution);\r\n\r\n  obj.time = `${startTime} ${endTime}`;\r\n  return obj;\r\n}\r\n\r\nexport function constructObj(obj, cbFunc) {\r\n  if (typeof obj === 'function') cbFunc = obj;\r\n\r\n  if (!obj || !!obj && typeof obj !== 'object' || Array.isArray(obj)) {\r\n    obj = new Error('Must supply an object');\r\n  } else if (!obj.keyword) obj = new Error('Must have a keyword field');\r\n\r\n  if (!!cbFunc && typeof cbFunc !== 'function') {\r\n    obj = new Error('Callback function must be a function');\r\n  }\r\n\r\n  if (!obj.hl) obj.hl = 'en-US';\r\n  if (!obj.category) obj.category = 0;\r\n  if (!obj.timezone) obj.timezone = new Date().getTimezoneOffset();\r\n\r\n  const possibleProperties = ['images', 'news', 'youtube', 'froogle', ''];\r\n\r\n  if (possibleProperties.indexOf(obj.property) === -1) {\r\n    obj.property = '';\r\n  }\r\n\r\n  if (!cbFunc) {\r\n    cbFunc = (err, res) => {\r\n      if (err) return err;\r\n      return res;\r\n    };\r\n  }\r\n\r\n  obj = formatTime(obj);\r\n\r\n  return {\r\n    cbFunc,\r\n    obj,\r\n  };\r\n}\r\n\r\nexport function formatResolution(resolution = '') {\r\n  const resolutions = ['COUNTRY', 'REGION', 'CITY', 'DMA'];\r\n  const isResValid = resolutions.some((res) => {\r\n    return res === resolution.toUpperCase();\r\n  });\r\n\r\n  if (isResValid) return resolution.toUpperCase();\r\n  return '';\r\n}\r\n\r\n/**\r\n * Parse the result of the google api as JSON\r\n * Throws an Error if the JSON is invalid\r\n * @param  {String} results\r\n * @return {Object}\r\n */\r\nexport function parseResults(results) {\r\n  // If this fails, you've hit the rate limit or Google has changed something\r\n  try {\r\n    return JSON.parse(results.slice(4)).widgets;\r\n  } catch (e) {\r\n    // Throw the JSON error e.g.\r\n    // { message: 'Unexpected token C in JSON at position 0',\r\n    //   requestBody: '<!DOCTYPE html><html>...'}\r\n    e.requestBody = results;\r\n    throw e;\r\n  }\r\n}\r\n\r\n/**\r\n * Create the array of comparisonItems to be used\r\n * @param  {Object} obj The query obj with .keyword property and optionally\r\n *                      the .geo property\r\n * @return {Array}     Returns an array of comparisonItems\r\n */\r\nexport function formatComparisonItems(obj) {\r\n\r\n  // If we are requesting an array of keywords for comparison\r\n  if (Array.isArray(obj.keyword)) {\r\n\r\n    // Map the keywords to the items array\r\n    let items = obj.keyword.reduce((arr, keyword) => {\r\n      // Add the keyword to the array\r\n      arr.push({ ...obj, keyword });\r\n\r\n      return arr;\r\n    }, []);\r\n\r\n    // Is there an array of regions as well?\r\n    if (obj.geo && Array.isArray(obj.geo)) {\r\n\r\n      obj.geo.forEach((region, index) => {\r\n        items[index].geo = region;\r\n      });\r\n    }\r\n\r\n    return items;\r\n  }\r\n\r\n  return [obj];\r\n}\r\n\r\nexport function getResults(request) {\r\n  return (searchType, obj) => {\r\n    const map = {\r\n      'Auto complete': {\r\n        path: `/trends/api/autocomplete/${encodeURIComponent(obj.keyword)}`,\r\n      },\r\n      'Interest over time': {\r\n        path: '/trends/api/widgetdata/multiline',\r\n        _id: 'TIMESERIES',\r\n      },\r\n      'Interest by region': {\r\n        path: '/trends/api/widgetdata/comparedgeo',\r\n        resolution: formatResolution(obj.resolution),\r\n        _id: 'GEO_MAP',\r\n      },\r\n      'Related topics': {\r\n        path: '/trends/api/widgetdata/relatedsearches',\r\n        _id: 'RELATED_TOPICS',\r\n      },\r\n      'Related queries': {\r\n        path: '/trends/api/widgetdata/relatedsearches',\r\n        _id: 'RELATED_QUERIES',\r\n      },\r\n    };\r\n\r\n    const options = {\r\n      method: 'GET',\r\n      host: 'trends.google.com',\r\n      path: '/trends/api/explore',\r\n      qs: {\r\n        hl: obj.hl,\r\n        req: JSON.stringify({\r\n          comparisonItem: formatComparisonItems(obj),\r\n          category: obj.category,\r\n          property: obj.property,\r\n        }),\r\n        tz: obj.timezone,\r\n      },\r\n    };\r\n\r\n    if (obj.agent) options.agent = obj.agent;\r\n\r\n    const { path, resolution, _id } = map[searchType];\r\n\r\n    return request(options)\r\n    .then((results) => {\r\n      const parsedResults = parseResults(results);\r\n\r\n      /**\r\n       * Search for the id that matches the search result\r\n       * Auto complete does not have results on initial query\r\n       * so just pass the first available result with request\r\n      */\r\n      const resultObj = parsedResults.find(({ id = '', request }) => {\r\n        return id.indexOf(_id) > -1 ||\r\n          (searchType === 'Auto complete' && request);\r\n      });\r\n\r\n      if (!resultObj) {\r\n        const errObj = {\r\n          message: 'Available widgets does not contain selected api type',\r\n          requestBody: results,\r\n        };\r\n\r\n        throw errObj;\r\n      }\r\n\r\n      let req = resultObj.request;\r\n      const token = resultObj.token;\r\n\r\n      if (resolution) req.resolution = resolution;\r\n      req.requestOptions.category = obj.category;\r\n      req.requestOptions.property = obj.property;\r\n      req = JSON.stringify(req);\r\n\r\n      const nextOptions = {\r\n        path,\r\n        method: 'GET',\r\n        host: 'trends.google.com',\r\n        qs: {\r\n          hl: obj.hl,\r\n          req,\r\n          token,\r\n          tz: obj.timezone,\r\n        },\r\n      };\r\n\r\n      if (obj.agent) nextOptions.agent = obj.agent;\r\n\r\n      return request(nextOptions);\r\n    })\r\n    .then((res) => {\r\n      try {\r\n        /** JSON.parse will decode unicode */\r\n        const results = JSON.stringify(JSON.parse(res.slice(5)));\r\n\r\n        return results;\r\n      } catch (e) {\r\n        /** throws if not valid JSON, so just return unaltered res string */\r\n        return res;\r\n      }\r\n    });\r\n  };\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** C:/xampp/htdocs/google-trends-api/~/eslint-loader!./src/utilities.js\n **/","'use strict';\r\nimport https from 'https';\r\nimport querystring from 'querystring';\r\n\r\n// cache of the cookie - avoid re-requesting on subsequent requests.\r\nlet cookieVal;\r\n\r\n// simpler request method for avoiding double-promise confusion\r\nfunction rereq(options, done) {\r\n  let req;\r\n\r\n  req = https.request(options, (res) => {\r\n    let chunk = '';\r\n\r\n    res.on('data', (data) => {\r\n      chunk += data;\r\n    });\r\n    res.on('end', () => {\r\n      done(null, chunk.toString('utf8'));\r\n    });\r\n  });\r\n  req.on('error', (e) => {\r\n    done(e);\r\n  });\r\n  req.end();\r\n}\r\n\r\nexport default function request({method, host, path, qs, agent}) {\r\n  const options = {\r\n    host,\r\n    method,\r\n    path: `${path}?${querystring.stringify(qs)}`,\r\n  };\r\n\r\n  if (agent) options.agent = agent;\r\n  // will use cached cookieVal if set on 429 error\r\n  if (cookieVal) options.headers = {'cookie': cookieVal};\r\n\r\n  return new Promise((resolve, reject) => {\r\n    const req = https.request(options, (res) => {\r\n      let chunk = '';\r\n\r\n      res.on('data', (data) => {\r\n        chunk += data;\r\n      });\r\n\r\n      res.on('end', () => {\r\n        if (res.statusCode === 429 && res.headers['set-cookie']) {\r\n          // Fix for the \"too many requests\" issue\r\n          // Look for the set-cookie header and re-request\r\n          cookieVal = res.headers['set-cookie'][0].split(';')[0];\r\n          options.headers = {'cookie': cookieVal};\r\n          rereq(options, function(err, response) {\r\n            if (err) return reject(err);\r\n            resolve(response);\r\n          });\r\n        } else {\r\n          resolve(chunk.toString('utf8'));\r\n        }\r\n      });\r\n    });\r\n\r\n    req.on('error', (e) => {\r\n      reject(e);\r\n    });\r\n\r\n    req.end();\r\n  });\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** C:/xampp/htdocs/google-trends-api/~/eslint-loader!./src/request.js\n **/","module.exports = require(\"https\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"https\"\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = require(\"querystring\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"querystring\"\n ** module id = 5\n ** module chunks = 0\n **/"],"sourceRoot":""}